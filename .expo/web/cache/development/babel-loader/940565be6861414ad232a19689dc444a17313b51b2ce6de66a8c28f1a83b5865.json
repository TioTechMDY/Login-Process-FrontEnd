{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Development\\\\React_nactive\\\\login_process\\\\frontend\\\\screens\\\\LoginScreen.js\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as SQLite from 'expo-sqlite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar db = SQLite.openDatabase('MyApp.db');\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT * FROM users WHERE email = ? AND password = ?', [email, password], function (_, _ref2) {\n        var rows = _ref2.rows;\n        if (rows.length > 0) {\n          navigation.navigate('Home');\n        } else {\n          alert('Invalid credentials');\n        }\n      });\n    });\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      onChangeText: setEmail,\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), _jsxDEV(TextInput, {\n      placeholder: \"Password\",\n      onChangeText: setPassword,\n      value: password,\n      secureTextEntry: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), _jsxDEV(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      onPress: function onPress() {\n        return navigation.navigate('Register');\n      },\n      children: \"Don't have an account? Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","SQLite","jsxDEV","_jsxDEV","db","openDatabase","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","transaction","tx","executeSql","_","_ref2","rows","length","navigate","alert","children","placeholder","onChangeText","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","secureTextEntry","title","onPress"],"sources":["D:/Development/React_nactive/login_process/frontend/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, Text } from 'react-native';\r\nimport * as SQLite from 'expo-sqlite';\r\n\r\nconst db = SQLite.openDatabase('MyApp.db');\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    db.transaction(tx => {\r\n      tx.executeSql(\r\n        'SELECT * FROM users WHERE email = ? AND password = ?',\r\n        [email, password],\r\n        (_, { rows }) => {\r\n          if (rows.length > 0) {\r\n            navigation.navigate('Home');\r\n          } else {\r\n            alert('Invalid credentials');\r\n          }\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput placeholder=\"Email\" onChangeText={setEmail} value={email} />\r\n      <TextInput placeholder=\"Password\" onChangeText={setPassword} value={password} secureTextEntry />\r\n      <Button title=\"Login\" onPress={handleLogin} />\r\n      <Text onPress={() => navigation.navigate('Register')}>Don't have an account? Register</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAExC,OAAO,KAAKC,MAAM,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,IAAMC,EAAE,GAAGH,MAAM,CAACI,YAAY,CAAC,UAAU,CAAC;AAE1C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC/B,IAAAC,SAAA,GAA0Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBd,EAAE,CAACe,WAAW,CAAC,UAAAC,EAAE,EAAI;MACnBA,EAAE,CAACC,UAAU,CACX,sDAAsD,EACtD,CAACT,KAAK,EAAEI,QAAQ,CAAC,EACjB,UAACM,CAAC,EAAAC,KAAA,EAAe;QAAA,IAAXC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QACR,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UACnBjB,UAAU,CAACkB,QAAQ,CAAC,MAAM,CAAC;QAC7B,CAAC,MAAM;UACLC,KAAK,CAAC,qBAAqB,CAAC;QAC9B;MACF,CACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,OACExB,OAAA,CAACN,IAAI;IAAA+B,QAAA,GACHzB,OAAA,CAACL,SAAS;MAAC+B,WAAW,EAAC,OAAO;MAACC,YAAY,EAAEjB,QAAS;MAACkB,KAAK,EAAEnB;IAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,EACvEjC,OAAA,CAACL,SAAS;MAAC+B,WAAW,EAAC,UAAU;MAACC,YAAY,EAAEb,WAAY;MAACc,KAAK,EAAEf,QAAS;MAACqB,eAAe;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,EAChGjC,OAAA,CAACJ,MAAM;MAACuC,KAAK,EAAC,OAAO;MAACC,OAAO,EAAErB;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,EAC9CjC,OAAA,CAACH,IAAI;MAACuC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQ/B,UAAU,CAACkB,QAAQ,CAAC,UAAU,CAAC;MAAA,CAAC;MAAAE,QAAA,EAAC;IAA+B;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACxF,CAAC;AAEX,CAAC;AAED,eAAe9B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}